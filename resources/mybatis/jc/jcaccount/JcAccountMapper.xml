<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jy.repository.jc.jcaccount.JcAccountDao">
    <resultMap id="BaseResultMap" type="JcAccount">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="account_id" property="accountId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="balance" property="balance" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="oper_id" property="operId" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    account_id, user_id, balance, create_time, update_time, oper_id
  </sql>
    <select id="find" resultMap="BaseResultMap" parameterType="JcAccount">
        select
        <include refid="Base_Column_List"/>
        from jc_account
        where account_id = #{accountId,jdbcType=VARCHAR}
    </select>
    <select id="findByPage" resultMap="BaseResultMap" parameterType="JcAccount">
        select
        a.*, b.mobile, b.nick_name
        from jc_account a, jc_user b where a.user_id = b.user_id
        <if test="param.keyWord != null">
            and (
            a.account_id LIKE CONCAT('%',#{param.keyWord},'%')
            or a.user_id LIKE CONCAT('%',#{param.keyWord},'%')
            or b.mobile LIKE CONCAT('%',#{param.keyWord},'%')
            or b.nick_name LIKE CONCAT('%',#{param.keyWord},'%')
            )
        </if>
    </select>
    <delete id="delete" parameterType="JcAccount">
    delete from jc_account
    where account_id = #{accountId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="JcAccount">
        insert into jc_account (account_id, user_id, balance,
        create_time, update_time, oper_id
        )
        values (#{accountId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{balance,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{operId,jdbcType=VARCHAR}
        )
    </insert>
    <update id="update" parameterType="JcAccount">
        update jc_account
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="balance != null">
                balance = #{balance,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operId != null">
                oper_id = #{operId,jdbcType=VARCHAR},
            </if>
        </set>
        where account_id = #{accountId,jdbcType=VARCHAR}
    </update>
</mapper>