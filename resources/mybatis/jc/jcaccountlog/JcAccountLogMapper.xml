<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jy.repository.jc.jcaccountlog.JcAccountLogDao">
    <resultMap id="BaseResultMap" type="JcAccountLog">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="account_log_id" property="accountLogId" jdbcType="VARCHAR"/>
        <result column="account_id" property="accountId" jdbcType="VARCHAR"/>
        <result column="last_balance" property="lastBalance" jdbcType="INTEGER"/>
        <result column="curr_balance" property="currBalance" jdbcType="INTEGER"/>
        <result column="income" property="income" jdbcType="INTEGER"/>
        <result column="expenditure" property="expenditure" jdbcType="INTEGER"/>
        <result column="source" property="source" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    account_log_id, account_id, last_balance, curr_balance, income, expenditure, source,
    create_time
  </sql>
    <select id="find" resultMap="BaseResultMap" parameterType="JcAccountLog">
        select
        <include refid="Base_Column_List"/>
        from jc_account_log
        where account_log_id = #{accountLogId,jdbcType=VARCHAR}
    </select>
    <select id="findByPage" resultMap="BaseResultMap" parameterType="JcAccountLog">
        select
        a.*, c.mobile, c.nick_name
        from jc_account_log a, jc_account b, jc_user c
        where a.account_id=b.account_id and b.user_id=c.user_id
        <if test="param.source">
           and source=${param.source}
        </if>
        <if test="param.keyWord != null">
            and (
            account_log_id LIKE CONCAT('%',#{param.keyWord},'%')
            or a.account_id LIKE CONCAT('%',#{param.keyWord},'%')
            or c.mobile LIKE CONCAT('%',#{param.keyWord},'%')
            or c.nick_name LIKE CONCAT('%',#{param.keyWord},'%')
            )
        </if>
        order by a.create_time desc
    </select>
    <delete id="delete" parameterType="JcAccountLog">
    delete from jc_account_log
    where account_log_id = #{accountLogId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="JcAccountLog">
    insert into jc_account_log (account_log_id, account_id, last_balance,
      curr_balance, income, expenditure, 
      source, create_time)
    values (#{accountLogId,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, #{lastBalance,jdbcType=INTEGER}, 
      #{currBalance,jdbcType=INTEGER}, #{income,jdbcType=INTEGER}, #{expenditure,jdbcType=INTEGER}, 
      #{source,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
    <update id="update" parameterType="JcAccountLog">
        update jc_account_log
        <set>
            <if test="accountId != null">
                account_id = #{accountId,jdbcType=VARCHAR},
            </if>
            <if test="lastBalance != null">
                last_balance = #{lastBalance,jdbcType=INTEGER},
            </if>
            <if test="currBalance != null">
                curr_balance = #{currBalance,jdbcType=INTEGER},
            </if>
            <if test="income != null">
                income = #{income,jdbcType=INTEGER},
            </if>
            <if test="expenditure != null">
                expenditure = #{expenditure,jdbcType=INTEGER},
            </if>
            <if test="source != null">
                source = #{source,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where account_log_id = #{accountLogId,jdbcType=VARCHAR}
    </update>
</mapper>