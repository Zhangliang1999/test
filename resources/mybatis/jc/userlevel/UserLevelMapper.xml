<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jy.repository.jc.userlevel.UserLevelDao">
    <resultMap id="BaseResultMap" type="userLevel">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="match_type" property="matchType" jdbcType="DECIMAL"/>
        <result column="level" property="level" jdbcType="DECIMAL"/>
        <result column="upgrade_type" property="upgradeType" jdbcType="DECIMAL"/>
        <result column="oper_id" property="operId" jdbcType="VARCHAR"/>
        <result column="bet_cnt" property="betCnt" jdbcType="INTEGER"/>
        <result column="win_cnt" property="winCnt" jdbcType="INTEGER"/>
        <result column="lose_cnt" property="loseCnt" jdbcType="INTEGER"/>
        <result column="profit_rate" property="profitRate" jdbcType="DECIMAL"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="is_valid" property="isValid" jdbcType="INTEGER"/>
        <result column="levelName" property="levelName" jdbcType="VARCHAR"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, match_type, level, upgrade_type, oper_id, bet_cnt, win_cnt, lose_cnt,
        profit_rate, create_time, update_time,is_valid,sort
    </sql>
    <select id="find" resultMap="BaseResultMap" parameterType="userLevel">
        select
        <include refid="Base_Column_List"/>
        from jc_user_level
        WHERE 1=1
        <if test="id != null and id != ''">
            and id = #{id,jdbcType=VARCHAR}
        </if>
        <if test="userId != null and userId != ''">
            and user_id = #{userId,jdbcType=VARCHAR}
        </if>
        <if test="matchType != null">
            and match_type=#{matchType}
        </if>
    </select>
    <select id="findByPage" resultMap="BaseResultMap" parameterType="userLevel">
        select
        a.*, b.mobile, b.nick_name
        from jc_user_level a, jc_user b
        where a.user_id=b.user_id
        <if test="param.isValid != null ">
            AND a.is_valid=#{param.isValid}
        </if>
        <if test="param.matchType != null ">
            AND a.match_type=#{param.matchType}
        </if>
        <if test="param.upgradeType != null ">
            AND a.upgrade_type=#{param.upgradeType}
        </if>
        <if test="param.level != null ">
            AND a.level=#{param.level}
        </if>
        <if test="param.keyWord != null">
            and (
            a.user_id LIKE CONCAT('%',#{param.keyWord},'%')
            or a.match_type LIKE CONCAT('%',#{param.keyWord},'%')
            or a.level LIKE CONCAT('%',#{param.keyWord},'%')
            or a.upgrade_type LIKE CONCAT('%',#{param.keyWord},'%')
            or a.oper_id LIKE CONCAT('%',#{param.keyWord},'%')
            or b.mobile LIKE CONCAT('%',#{param.keyWord},'%')
            or b.nick_name LIKE CONCAT('%',#{param.keyWord},'%')
            )
        </if>
        ORDER BY isnull(a.sort) asc, level desc, upgrade_type desc, id desc
    </select>
    <delete id="delete" parameterType="userLevel">
    delete from jc_user_level
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteBatch" parameterType="java.util.List">
        delete from jc_user_level
        where id in (
        <foreach item="o" collection="list" open="" separator="," close="">
            #{o.id}
        </foreach>
        )
    </delete>
    <insert id="insert" parameterType="userLevel">
    insert into jc_user_level (id, user_id, match_type,
      level, upgrade_type, oper_id, 
      bet_cnt, win_cnt, lose_cnt, 
      profit_rate, create_time, update_time,is_valid
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{matchType,jdbcType=DECIMAL}, 
      #{level,jdbcType=DECIMAL}, #{upgradeType,jdbcType=DECIMAL}, #{operId,jdbcType=VARCHAR}, 
      #{betCnt,jdbcType=INTEGER}, #{winCnt,jdbcType=INTEGER}, #{loseCnt,jdbcType=INTEGER}, 
      #{profitRate,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
       #{isValid,jdbcType=DECIMAL}
      )
  </insert>
    <update id="update" parameterType="userLevel">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update jc_user_level
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="matchType != null">
                match_type = #{matchType,jdbcType=DECIMAL},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=DECIMAL},
            </if>
            <if test="upgradeType != null">
                upgrade_type = #{upgradeType,jdbcType=DECIMAL},
            </if>
            <if test="operId != null">
                oper_id = #{operId,jdbcType=VARCHAR},
            </if>
            <if test="betCnt != null">
                bet_cnt = #{betCnt,jdbcType=INTEGER},
            </if>
            <if test="winCnt != null">
                win_cnt = #{winCnt,jdbcType=INTEGER},
            </if>
            <if test="loseCnt != null">
                lose_cnt = #{loseCnt,jdbcType=INTEGER},
            </if>
            <if test="profitRate != null">
                profit_rate = #{profitRate,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isValid != null">
                is_valid = #{isValid,jdbcType=DECIMAL},
            </if>
            sort = #{sort, jdbcType=INTEGER},
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>